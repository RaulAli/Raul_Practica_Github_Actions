name: Raul_Practica_Github_Actions_workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  linter_job:
    name: Linter_job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install deps (prefer lockfile)
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Verify lint script exists
        run: |
          node -e "const p=require('./package.json'); if(!p.scripts?.lint){console.error('No hay script \"lint\" en package.json'); process.exit(2)}; console.log('lint script:', p.scripts.lint)"

      - name: Run linter (fail on warnings)
        run: npm run lint -- --max-warnings=0

  cypress_job:
    name: Cypress_job
    runs-on: ubuntu-latest
    needs: [ linter_job ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build (Next.js)
        run: npm run build

      - name: Run Cypress tests (continues on error)
        id: cypress
        uses: cypress-io/github-action@v6
        with:
          start: npm run start
          wait-on: http://localhost:3000
          browser: chrome
          config: baseUrl=http://localhost:3000
        continue-on-error: true

      - name: Write result summary to result.txt
        run: |
          echo "${{ steps.cypress.outcome }}" > result.txt
          echo "Cypress outcome: ${{ steps.cypress.outcome }}"

      - name: Upload result artifact
        uses: actions/upload-artifact@v4
        with:
          name: cypress-result
          path: result.txt

  deploy_job:
    name: Deploy_job
    runs-on: ubuntu-latest
    needs: [ cypress_job ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to Vercel (production)
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: .
          vercel-args: '--prod'
          github-comment: false
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

  add_badge_job:
    name: Add_badge_job
    runs-on: ubuntu-latest
    needs: [ cypress_job ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Download Cypress result
        uses: actions/download-artifact@v4
        with:
          name: cypress-result
          path: .

      - name: Set output from artifact
        id: get_outcome
        run: |
          OUT=$(cat result.txt)
          echo "cypress_outcome=$OUT" >> $GITHUB_OUTPUT
          # (deprecated pero pedido en la prÃ¡ctica)
          echo "::set-output name=cypress_outcome::$OUT"

      - name: Add badge to README
        uses: ./.github/actions/add-badge
        with:
          outcome: ${{ steps.get_outcome.outputs.cypress_outcome }}

      - name: Determine branch to push
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "BRANCH=${{ github.head_ref }}" >> $GITHUB_OUTPUT
          else
            echo "BRANCH=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push README
        run: |
          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add README.md
            git commit -m "docs: update README with Cypress badge [skip ci]"
            git push origin HEAD:${{ steps.vars.outputs.BRANCH }}
          else
            echo "No changes in README.md"
          fi
